/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package DirectoryBackup;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author raj
 */
public class DirctoryBackup extends javax.swing.JFrame {

    /**
     * Creates new form FileUpdater
     */

    public DirctoryBackup() {
        this.setTitle("DirectoryBackup");
        this.setLocation(260, 150);
        initComponents();
        displayInfo();
        this.performOperation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        jToolBar1.setRollover(true);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setLayout(new java.awt.CardLayout());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Updater");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("help ??");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("select backup repository");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("select file");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("select folder");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("update");
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTree1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 11, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DirctoryBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DirctoryBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DirctoryBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DirctoryBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DirctoryBackup().setVisible(true);

            }
        });

    }

    void performOperation() {
        jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree1.addTreeSelectionListener(new TreeSelectionListener() {

            @Override
            public void valueChanged(TreeSelectionEvent e) {

                DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
                if (node == null) {
                    return;
                }

                Object nodeInfo = node.getUserObject();
                String nodeName = nodeInfo.toString();
                try {
                    switch (nodeName) {
                        case "select backup repository":
                            jTextArea2.setText("");
                            MainBackground.writeBackupDirectory(chooseDirectory());
                            break;

                        case "select file":
                            jTextArea2.setText("");
                            MainBackground.getSourceFile(chooseFile());
                            break;

                        case "select folder":
                            jTextArea2.setText("");
                            MainBackground.getSourceFolder(chooseDirectory());
                            break;

                        case "update":
                            jTextArea2.setText("");
                            MainBackground.update();
                            break;
                            
                        case "help ??":
                            displayInfo();
                            break;
                    }
                } catch (NullPointerException ex) {
                    
                }

            }

        }
        );
    }

    private static void displayInfo()
    {
        jTextArea2.setText("INFORMATION\n1. This is a simple GUI based java application which keeps backup of your data.\n     It runs on JSE 1.7 and above."+
                            " \n\n2. You can choose which files/folders you want to maintain backup and \n    application"+
                            " will store a backup for those files/folders.\n\n3. Just one click and application will update the files/folders "+
                            " automatically.\n\n4. The Apllication allows you to store bakup data in only one repository.\n    You will get error if"+
                            " you try to create more than one backup repository.\n\n\nHOW TO USE IT ??\n1. Use 'select backup repository' to select the"+
                                    " directory where you want all your \n     backup data to be stored.\n\n2. Use 'select file' to select those files"+
                                    " which you want to keep backup of.\n\n3. 'Select folder' is for selecting those directories which you want maintain backup."+
                                    " \n\n4. Use 'update' option to update all the changed files/folders since last update. \n\n\nPRECAUTION\n1. The application"+
                                    " creates a file with the name 'DirectoryBackup.data' in your use home directory.\n     Never try to edit or delete it.");
        
    }
    private String chooseDirectory() throws NullPointerException {
        File selectedFolder = null;
        JFileChooser destFolder = new JFileChooser();
        destFolder.setDialogTitle("Select Directory");
        destFolder.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        destFolder.setCurrentDirectory(new File(System.getProperty("user.home")));
        int res = destFolder.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            selectedFolder = destFolder.getSelectedFile();

        }
        return selectedFolder.getAbsolutePath();
    }

    private String chooseFile() throws NullPointerException {
        File selectedFile = null;
        JFileChooser sourceFile = new JFileChooser();
        sourceFile.setDialogTitle("Select File");
        int res = sourceFile.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {;
            selectedFile = sourceFile.getSelectedFile();

        }
        return selectedFile.getAbsolutePath();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
